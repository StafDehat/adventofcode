#!/usr/bin/env python3
  
import sys
import collections

# Debug function
def debug(output):
  print(output)
#end debug()

# CLI arg, input file
if len(sys.argv) != 2:
  print("ERR: Expect =1 arg; the file containing input")
  exit(1)
#end if
try:
  with open(sys.argv[1], 'r') as input:
    lines = input.readlines()
except:
  print("ERR: Failed to open input file (%s)" % sys.argv[1])
  exit(1)
#end try

# Nuke those newlines
lines = [line.strip() for line in lines]

# Debug function, for easier printing
def print_r(lst):
  length_list = [len(str(element)) for row in lst for element in row]
  column_width = max(length_list)
  for row in lst:
    row = "".join(str(element).rjust(column_width + 2) for element in row)
    print(row)
#end print_r()

def getVentCoords(ventDict):
  coordList = []
  x1 = ventDict["x1"]
  x2 = ventDict["x2"]
  y1 = ventDict["y1"]
  y2 = ventDict["y2"]
  numSteps = max( abs(x1-x2), abs(y1-y2) )
  if x1 < x2:
    xSlope = +1
  elif x1 > x2:
    xSlope = -1
  else:
    xSlope = 0
  #end if-x
  if y1 < y2:
    ySlope = +1
  elif y1 > y2:
    ySlope = -1
  else:
    ySlope = 0
  #end if-y
  for i in range(0,numSteps+1):
    coordList.append({ "x":x1+(i*xSlope),
                       "y":y1+(i*ySlope)  })
  return coordList
#end getVentCoords()


#
# The Meat

# Convert string lines to a useful data structure
# Let's try a list of dicts, and see how that goes.
ventDicts = []
for line in lines:
  coord1 = line.split()[0]
  coord2 = line.split()[2]
  ventEntry = {}
  ventEntry["x1"] = int(coord1.split(',')[0])
  ventEntry["y1"] = int(coord1.split(',')[1])
  ventEntry["x2"] = int(coord2.split(',')[0])
  ventEntry["y2"] = int(coord2.split(',')[1])
  ventDicts.append(ventEntry)
#end for

# Tally the vents on a coordinate-based "grid", of sorts
grid = collections.Counter()
for ventDict in ventDicts:
  coords = getVentCoords(ventDict)
  for coord in coords:
    grid[coord["x"],coord["y"]] += 1
  #end for
#end for

numDangerous = 0
for coord in grid.keys():
  if grid[coord] > 1:
    numDangerous += 1

print("Grid coords with >1 vent passing through:")
print(numDangerous)
