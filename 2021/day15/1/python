#!/usr/bin/env python3
  
import sys

# Debug function
def debug(output):
  print(output)
#end debug()

# CLI arg, input file
if len(sys.argv) != 2:
  print("ERR: Expect =1 arg; the file containing input")
  exit(1)
#end if
try:
  with open(sys.argv[1], 'r') as input:
    lines = input.readlines()
except:
  print("ERR: Failed to open input file (%s)" % sys.argv[1])
  exit(1)
#end try

# Nuke those newlines
lines = [line.strip() for line in lines]

# Debug function, for easier printing
def print_r(lst):
  length_list = [len(str(element)) for row in lst for element in row]
  column_width = max(length_list)
  for row in lst:
    row = "".join(str(element).rjust(column_width + 2) for element in row)
    print(row)
#end print_r()


#
# The Meat

def display(grid):
  for row in grid:
    print(row)
#end display()

grid = [ [ int(char) for char in line ] for line in lines ]
weights = []
for i in range(len(grid)):
  weights.append([0]*len(grid[i]))


for y in range(len(grid)):
  for x in range(len(grid[y])):
    candidates = []
    if x > 0:
      candidates.append(weights[x-1][y])
    if y > 0:
      candidates.append(weights[x][y-1])
    try:
      weights[x][y] = min(candidates)+grid[x][y]
    except ValueError:
      weights[x][y] = 0

display(weights)
print(weights[len(weights[0])-1][len(weights)-1])
# Solution < 697
